/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kalah;

import static java.lang.System.out;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author 100571571
 */
public class Kalah extends javax.swing.JFrame {

    /**
     * Creates new form Kalah
     */
    public Kalah() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Header = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        R0 = new javax.swing.JPanel();
        R0Value = new javax.swing.JLabel();
        R6 = new javax.swing.JPanel();
        R6Value = new javax.swing.JLabel();
        R5 = new javax.swing.JPanel();
        R5Value = new javax.swing.JLabel();
        R4 = new javax.swing.JPanel();
        R4Value = new javax.swing.JLabel();
        R3 = new javax.swing.JPanel();
        R3Value = new javax.swing.JLabel();
        R2 = new javax.swing.JPanel();
        R2Value = new javax.swing.JLabel();
        R1 = new javax.swing.JPanel();
        R1Value = new javax.swing.JLabel();
        L1 = new javax.swing.JPanel();
        L1Value = new javax.swing.JLabel();
        L2 = new javax.swing.JPanel();
        L2Value = new javax.swing.JLabel();
        L3 = new javax.swing.JPanel();
        L3Value = new javax.swing.JLabel();
        L4 = new javax.swing.JPanel();
        L4Value = new javax.swing.JLabel();
        L5 = new javax.swing.JPanel();
        L5Value = new javax.swing.JLabel();
        L6 = new javax.swing.JPanel();
        L6Value = new javax.swing.JLabel();
        L0 = new javax.swing.JPanel();
        L0Value = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        PlayerLabel = new javax.swing.JLabel();
        WarningLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Start = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Header.setBackground(new java.awt.Color(51, 102, 255));

        Title.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Title.setText("Kalah");
        Title.setFocusable(false);

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addContainerGap())
        );

        R0.setBackground(new java.awt.Color(204, 255, 153));
        R0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        R0.setMaximumSize(new java.awt.Dimension(80, 200));
        R0.setMinimumSize(new java.awt.Dimension(80, 200));
        R0.setPreferredSize(new java.awt.Dimension(80, 200));

        R0Value.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        R0Value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        R0Value.setText("0");

        javax.swing.GroupLayout R0Layout = new javax.swing.GroupLayout(R0);
        R0.setLayout(R0Layout);
        R0Layout.setHorizontalGroup(
            R0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, R0Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(R0Value, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addContainerGap())
        );
        R0Layout.setVerticalGroup(
            R0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(R0Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(R0Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        R6.setBackground(new java.awt.Color(204, 255, 153));
        R6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        R6.setMaximumSize(new java.awt.Dimension(80, 100));
        R6.setMinimumSize(new java.awt.Dimension(80, 100));
        R6.setPreferredSize(new java.awt.Dimension(80, 100));

        R6Value.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        R6Value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        R6Value.setText("3");
        R6Value.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                R6ValueMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout R6Layout = new javax.swing.GroupLayout(R6);
        R6.setLayout(R6Layout);
        R6Layout.setHorizontalGroup(
            R6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(R6Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        R6Layout.setVerticalGroup(
            R6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(R6Value, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
        );

        R5.setBackground(new java.awt.Color(204, 255, 153));
        R5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        R5.setMaximumSize(new java.awt.Dimension(80, 100));
        R5.setMinimumSize(new java.awt.Dimension(80, 100));

        R5Value.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        R5Value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        R5Value.setText("3");
        R5Value.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                R5ValueMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout R5Layout = new javax.swing.GroupLayout(R5);
        R5.setLayout(R5Layout);
        R5Layout.setHorizontalGroup(
            R5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(R5Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        R5Layout.setVerticalGroup(
            R5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(R5Value, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
        );

        R4.setBackground(new java.awt.Color(204, 255, 153));
        R4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        R4.setMaximumSize(new java.awt.Dimension(80, 100));
        R4.setMinimumSize(new java.awt.Dimension(80, 100));

        R4Value.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        R4Value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        R4Value.setText("3");
        R4Value.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                R4ValueMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout R4Layout = new javax.swing.GroupLayout(R4);
        R4.setLayout(R4Layout);
        R4Layout.setHorizontalGroup(
            R4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(R4Value, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
        );
        R4Layout.setVerticalGroup(
            R4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(R4Value, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
        );

        R3.setBackground(new java.awt.Color(204, 255, 153));
        R3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        R3.setMaximumSize(new java.awt.Dimension(80, 100));
        R3.setMinimumSize(new java.awt.Dimension(80, 100));

        R3Value.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        R3Value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        R3Value.setText("3");
        R3Value.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                R3ValueMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout R3Layout = new javax.swing.GroupLayout(R3);
        R3.setLayout(R3Layout);
        R3Layout.setHorizontalGroup(
            R3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(R3Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        R3Layout.setVerticalGroup(
            R3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(R3Value, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
        );

        R2.setBackground(new java.awt.Color(204, 255, 153));
        R2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        R2.setMaximumSize(new java.awt.Dimension(80, 100));
        R2.setMinimumSize(new java.awt.Dimension(80, 100));

        R2Value.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        R2Value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        R2Value.setText("3");
        R2Value.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                R2ValueMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout R2Layout = new javax.swing.GroupLayout(R2);
        R2.setLayout(R2Layout);
        R2Layout.setHorizontalGroup(
            R2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(R2Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        R2Layout.setVerticalGroup(
            R2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(R2Value, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
        );

        R1.setBackground(new java.awt.Color(204, 255, 153));
        R1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        R1.setMaximumSize(new java.awt.Dimension(80, 100));
        R1.setMinimumSize(new java.awt.Dimension(80, 100));

        R1Value.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        R1Value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        R1Value.setText("3");
        R1Value.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                R1ValueMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout R1Layout = new javax.swing.GroupLayout(R1);
        R1.setLayout(R1Layout);
        R1Layout.setHorizontalGroup(
            R1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(R1Value, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
        );
        R1Layout.setVerticalGroup(
            R1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(R1Value, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
        );

        L1.setBackground(new java.awt.Color(102, 153, 255));
        L1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        L1.setMaximumSize(new java.awt.Dimension(80, 100));
        L1.setMinimumSize(new java.awt.Dimension(80, 100));
        L1.setPreferredSize(new java.awt.Dimension(80, 100));

        L1Value.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        L1Value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        L1Value.setText("3");
        L1Value.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                L1ValueMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout L1Layout = new javax.swing.GroupLayout(L1);
        L1.setLayout(L1Layout);
        L1Layout.setHorizontalGroup(
            L1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(L1Value, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
        );
        L1Layout.setVerticalGroup(
            L1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(L1Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        L2.setBackground(new java.awt.Color(102, 153, 255));
        L2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        L2.setMaximumSize(new java.awt.Dimension(80, 100));
        L2.setMinimumSize(new java.awt.Dimension(80, 100));

        L2Value.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        L2Value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        L2Value.setText("3");
        L2Value.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                L2ValueMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout L2Layout = new javax.swing.GroupLayout(L2);
        L2.setLayout(L2Layout);
        L2Layout.setHorizontalGroup(
            L2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(L2Value, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
        );
        L2Layout.setVerticalGroup(
            L2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(L2Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        L3.setBackground(new java.awt.Color(102, 153, 255));
        L3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        L3.setMaximumSize(new java.awt.Dimension(80, 100));
        L3.setMinimumSize(new java.awt.Dimension(80, 100));

        L3Value.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        L3Value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        L3Value.setText("3");
        L3Value.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                L3ValueMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout L3Layout = new javax.swing.GroupLayout(L3);
        L3.setLayout(L3Layout);
        L3Layout.setHorizontalGroup(
            L3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(L3Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        L3Layout.setVerticalGroup(
            L3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(L3Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        L4.setBackground(new java.awt.Color(102, 153, 255));
        L4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        L4.setMaximumSize(new java.awt.Dimension(80, 100));
        L4.setMinimumSize(new java.awt.Dimension(80, 100));

        L4Value.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        L4Value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        L4Value.setText("3");
        L4Value.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                L4ValueMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout L4Layout = new javax.swing.GroupLayout(L4);
        L4.setLayout(L4Layout);
        L4Layout.setHorizontalGroup(
            L4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(L4Value, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
        );
        L4Layout.setVerticalGroup(
            L4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(L4Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        L5.setBackground(new java.awt.Color(102, 153, 255));
        L5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        L5.setMaximumSize(new java.awt.Dimension(80, 100));
        L5.setMinimumSize(new java.awt.Dimension(80, 100));

        L5Value.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        L5Value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        L5Value.setText("3");
        L5Value.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                L5ValueMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout L5Layout = new javax.swing.GroupLayout(L5);
        L5.setLayout(L5Layout);
        L5Layout.setHorizontalGroup(
            L5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(L5Value, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
        );
        L5Layout.setVerticalGroup(
            L5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(L5Value, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
        );

        L6.setBackground(new java.awt.Color(102, 153, 255));
        L6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        L6.setMaximumSize(new java.awt.Dimension(80, 100));
        L6.setMinimumSize(new java.awt.Dimension(80, 100));

        L6Value.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        L6Value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        L6Value.setText("3");
        L6Value.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                L6ValueMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout L6Layout = new javax.swing.GroupLayout(L6);
        L6.setLayout(L6Layout);
        L6Layout.setHorizontalGroup(
            L6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(L6Value, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
        );
        L6Layout.setVerticalGroup(
            L6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(L6Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        L0.setBackground(new java.awt.Color(102, 153, 255));
        L0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        L0.setMaximumSize(new java.awt.Dimension(80, 200));
        L0.setMinimumSize(new java.awt.Dimension(80, 200));
        L0.setPreferredSize(new java.awt.Dimension(80, 200));

        L0Value.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        L0Value.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        L0Value.setText("0");

        javax.swing.GroupLayout L0Layout = new javax.swing.GroupLayout(L0);
        L0.setLayout(L0Layout);
        L0Layout.setHorizontalGroup(
            L0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, L0Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(L0Value, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addContainerGap())
        );
        L0Layout.setVerticalGroup(
            L0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(L0Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(L0Value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setText("Current Player:");

        PlayerLabel.setText("Player1");

        WarningLabel.setText(" ");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Player 2");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Player 1");

        Start.setText("Start");
        Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(WarningLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Start))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(R0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(L1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(R6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(L2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(R5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(R4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(L3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(PlayerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(L4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(R3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(L5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(R2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(R1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(L6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(L0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(R6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(L5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(L2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(L3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(L4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(L1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(L6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(R0, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                    .addComponent(L0, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(PlayerLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(WarningLabel))
                    .addComponent(Start, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void R6ValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_R6ValueMouseClicked
        int returned = game.MakeMove(1,Player, HousePos.R6.getValue());
        checkWhoPlay(returned);
        refreshHouses();
        
    }//GEN-LAST:event_R6ValueMouseClicked

    private void R5ValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_R5ValueMouseClicked
        int returned = game.MakeMove(1,Player, HousePos.R5.getValue());
        checkWhoPlay(returned);
        refreshHouses();
    }//GEN-LAST:event_R5ValueMouseClicked

    private void R4ValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_R4ValueMouseClicked
        int returned = game.MakeMove(1,Player, HousePos.R4.getValue());
        checkWhoPlay(returned);
        refreshHouses();
    }//GEN-LAST:event_R4ValueMouseClicked

    private void R3ValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_R3ValueMouseClicked
        int returned = game.MakeMove(1,Player, HousePos.R3.getValue());
        checkWhoPlay(returned);
        refreshHouses();
    }//GEN-LAST:event_R3ValueMouseClicked

    private void R2ValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_R2ValueMouseClicked
        int returned = game.MakeMove(1,Player, HousePos.R2.getValue());
        checkWhoPlay(returned);
        refreshHouses();
    }//GEN-LAST:event_R2ValueMouseClicked

    private void R1ValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_R1ValueMouseClicked
        int returned = game.MakeMove(1,Player, HousePos.R1.getValue());
        checkWhoPlay(returned);
        refreshHouses();
    }//GEN-LAST:event_R1ValueMouseClicked

    private void L1ValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_L1ValueMouseClicked
        int returned = game.MakeMove(1,Player, HousePos.L1.getValue());
        checkWhoPlay(returned);
        refreshHouses();
    }//GEN-LAST:event_L1ValueMouseClicked

    private void L2ValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_L2ValueMouseClicked
        int returned = game.MakeMove(1,Player, HousePos.L2.getValue());
        checkWhoPlay(returned);
        refreshHouses();
    }//GEN-LAST:event_L2ValueMouseClicked

    private void L3ValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_L3ValueMouseClicked
        int returned = game.MakeMove(1,Player, HousePos.L3.getValue());
        checkWhoPlay(returned);  
        refreshHouses();
    }//GEN-LAST:event_L3ValueMouseClicked

    private void L4ValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_L4ValueMouseClicked
        int returned = game.MakeMove(1,Player, HousePos.L4.getValue());
        checkWhoPlay(returned);
        refreshHouses();
    }//GEN-LAST:event_L4ValueMouseClicked

    private void L5ValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_L5ValueMouseClicked
        int returned = game.MakeMove(1,Player, HousePos.L5.getValue());
        checkWhoPlay(returned);
        refreshHouses();
    }//GEN-LAST:event_L5ValueMouseClicked

    private void L6ValueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_L6ValueMouseClicked
        int returned = game.MakeMove(1,Player, HousePos.L6.getValue());
        checkWhoPlay(returned);
        refreshHouses();
    }//GEN-LAST:event_L6ValueMouseClicked

    private void StartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartActionPerformed
        // TODO add your handling code here:
        int returned = game.MakeMove(2, Player ,basicAI.calculateTheBestMovie(2,game.getHouses()));
        out.println(returned);
        checkWhoPlay(returned);
        refreshHouses();
    }//GEN-LAST:event_StartActionPerformed

    private boolean checkIfGameIsOver(){
        
       boolean gameOver = false;
       int player1Pits = 0, player2Pits = 0, pits = 0;
       
       // Get the total pits in the player1 houses
       for(int i = HousePos.R1.getValue(); i <= HousePos.R6.getValue(); i++)
       {
           player1Pits = player1Pits + game.getHouses().getHouse(i).getPits();
       }
       
       //Get the total pits in the player2 houses
       for(int i = HousePos.L1.getValue(); i <= HousePos.L6.getValue(); i++)
       {
           player2Pits = player2Pits + game.getHouses().getHouse(i).getPits();
       }
       
       //If player1 has 0 pits, get the rest of pits from player2 and put in player2 store
       if(player1Pits == 0){
            for(int i = HousePos.L1.getValue(); i <= HousePos.L6.getValue(); i++)
                game.getHouses().getHouse(i).setPits(0);
            
            pits = game.getHouses().getHouse(HousePos.L0.getValue()).getPits();
            game.getHouses().getHouse(HousePos.L0.getValue()).setPits(pits+player2Pits);
            gameOver = true;
       }
       
       //If player2 has 0 pits, get the rest of pits from player1 and put in player1 store
       if(player2Pits == 0){
            for(int i = HousePos.R1.getValue(); i <= HousePos.R6.getValue(); i++)
                game.getHouses().getHouse(i).setPits(0);
            
            pits = game.getHouses().getHouse(HousePos.R0.getValue()).getPits();
            game.getHouses().getHouse(HousePos.R0.getValue()).setPits(pits+player1Pits);
            gameOver = true;
       }
       
       return gameOver;
    }
    
    private void checkWhoPlay(int number){
        if(checkIfGameIsOver())
            number = 0;
        
        switch (number){
            case 0:
                if(game.getHouses().getHouse(HousePos.R0.getValue()).getPits() > game.getHouses().getHouse(HousePos.L0.getValue()).getPits())
                {
                    Player = 1;
                    WarningLabel.setText("Game is over. The winner is Player" + Player);
                }
                else if (game.getHouses().getHouse(HousePos.R0.getValue()).getPits() < game.getHouses().getHouse(HousePos.L0.getValue()).getPits())
                {
                    Player = 2;
                    WarningLabel.setText("Game is over. The winner is Player" + Player);
                }
                else
                    WarningLabel.setText("Game is over. The game is drawn");
                break;
            case 1:
                WarningLabel.setText("Next Player");
                if(Player == 1)
                    Player = 2;
                else
                    Player = 1;
                PlayerLabel.setText("Player " + Player);
                break;
            case 2:
                WarningLabel.setText("Next Player, but you got it some pits from the neighbor");
                if(Player == 1)
                    Player = 2;
                else
                    Player = 1;
                PlayerLabel.setText("Player " + Player);
                break;
            case 3:
                WarningLabel.setText("You can play again");
                PlayerLabel.setText("Player " + Player);
                break;
            default:
                WarningLabel.setText("You can't use this house");
                PlayerLabel.setText("Player " + Player);
                break;
        }
                    
    }
    private void refreshHouses(){
        StringBuilder sb = new StringBuilder();
        
        sb.append(game.getHouses().getHouse(HousePos.R0.getValue()).getPits());
        R0Value.setText(sb.toString());
        sb.delete(0, sb.length());
        
        sb.append(game.getHouses().getHouse(HousePos.R1.getValue()).getPits());
        R1Value.setText(sb.toString());
        sb.delete(0, sb.length());
        
        sb.append(game.getHouses().getHouse(HousePos.R2.getValue()).getPits());
        R2Value.setText(sb.toString());
        sb.delete(0, sb.length());
        
        sb.append(game.getHouses().getHouse(HousePos.R3.getValue()).getPits());
        R3Value.setText(sb.toString());
        sb.delete(0, sb.length());
        
        sb.append(game.getHouses().getHouse(HousePos.R4.getValue()).getPits());
        R4Value.setText(sb.toString());
        sb.delete(0, sb.length());
        
        sb.append(game.getHouses().getHouse(HousePos.R5.getValue()).getPits());
        R5Value.setText(sb.toString());
        sb.delete(0, sb.length());
        
        sb.append(game.getHouses().getHouse(HousePos.R6.getValue()).getPits());
        R6Value.setText(sb.toString());
        sb.delete(0, sb.length());
        
        sb.append(game.getHouses().getHouse(HousePos.L1.getValue()).getPits());
        L1Value.setText(sb.toString());
        sb.delete(0, sb.length());
        
        sb.append(game.getHouses().getHouse(HousePos.L2.getValue()).getPits());
        L2Value.setText(sb.toString());
        sb.delete(0, sb.length());
        
        sb.append(game.getHouses().getHouse(HousePos.L3.getValue()).getPits());
        L3Value.setText(sb.toString());
        sb.delete(0, sb.length());
        
        sb.append(game.getHouses().getHouse(HousePos.L4.getValue()).getPits());
        L4Value.setText(sb.toString());
        sb.delete(0, sb.length());
        
        sb.append(game.getHouses().getHouse(HousePos.L5.getValue()).getPits());
        L5Value.setText(sb.toString());
        sb.delete(0, sb.length());
        
        sb.append(game.getHouses().getHouse(HousePos.L6.getValue()).getPits());
        L6Value.setText(sb.toString());
        sb.delete(0, sb.length());
        
        sb.append(game.getHouses().getHouse(HousePos.L0.getValue()).getPits());
        L0Value.setText(sb.toString());
        sb.delete(0, sb.length());
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kalah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kalah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kalah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kalah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Kalah().setVisible(true);
        });
       
    }

    Game game = new Game();
    KalahAI_Basic basicAI = new KalahAI_Basic(2,game);
    int Player = 1;
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Header;
    private javax.swing.JPanel L0;
    private javax.swing.JLabel L0Value;
    private javax.swing.JPanel L1;
    private javax.swing.JLabel L1Value;
    private javax.swing.JPanel L2;
    private javax.swing.JLabel L2Value;
    private javax.swing.JPanel L3;
    private javax.swing.JLabel L3Value;
    private javax.swing.JPanel L4;
    private javax.swing.JLabel L4Value;
    private javax.swing.JPanel L5;
    private javax.swing.JLabel L5Value;
    private javax.swing.JPanel L6;
    private javax.swing.JLabel L6Value;
    private javax.swing.JLabel PlayerLabel;
    private javax.swing.JPanel R0;
    private javax.swing.JLabel R0Value;
    private javax.swing.JPanel R1;
    private javax.swing.JLabel R1Value;
    private javax.swing.JPanel R2;
    private javax.swing.JLabel R2Value;
    private javax.swing.JPanel R3;
    private javax.swing.JLabel R3Value;
    private javax.swing.JPanel R4;
    private javax.swing.JLabel R4Value;
    private javax.swing.JPanel R5;
    private javax.swing.JLabel R5Value;
    private javax.swing.JPanel R6;
    private javax.swing.JLabel R6Value;
    private javax.swing.JButton Start;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel WarningLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
